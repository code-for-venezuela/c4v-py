name: Main

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 'Python 3.6.10'
            os: ubuntu-18.04
            python-version: '3.6.10'
          - name: 'Python 3.7.9'
            os: ubuntu-18.04
            python-version: '3.7.9'
          - name: 'Python 3.8.3'
            os: ubuntu-18.04
            python-version: '3.8.3'
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'

      - name: Cache basic dependencies
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ runner.python-version }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install basic dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r ./requirements.txt

      - name: Cache poetry environments
        uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-${{ runner.python-version }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Creating Angostura Secret
        run: |
          echo "${{ secrets.ANGOSTURA_KEY }}" > ./angostura_connection.json

      - name: Run Nox session
        run: |
          export ANGOSTURA_SERVICE_ACCOUNT="./angostura_connection.json"
          nox -r -s tests-${{ matrix.python-version }}
